#include <Servo.h>
#include <ThomasLib.h>
#include <LedControl.h>

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//LED_DISPLAY
int DIN = 45;
int CS = 44;
int CLK = 42;

byte L[8]= {0x18, 0x3c, 0x7e, 0xff, 0xff, 0x3c, 0x3c, 0x3c};
byte R[8]= {0x18, 0x1c, 0xfe, 0xff, 0xff, 0xfe, 0x1c, 0x18};
byte V[8]= {0x18, 0x38, 0x7f, 0xff, 0xff, 0x7f, 0x38, 0x18};
LedControl lc=LedControl(DIN, CLK, CS, 0);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// servo 
const int servoPin = 9; 
Servo servo; 

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//geluid_sensor
const int trigPin = 22;// voor sensor 
const int echoPin = 23;// voor sensor
const int trigPin1 = 24;// rechter sensor
const int echoPin1 = 25;// rechter sensor
const int trigPin2 = 26;// linker sensor
const int echoPin2 = 27;// linker sensor
const int thresholdDistance = 10; // Adjust as needed
const int thresholdDistance1 = 25;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//motor initialisatie
TH_DCMotor motor1(1); //motor 1 is links voor
TH_DCMotor motor2(2); //motor 2 is links achter
TH_DCMotor motor3(3); //motor 3 is rechts achter
TH_DCMotor motor4(4); //motor 4 is rechts voor
motor1.run(TERUG);
motor2.run(VOOR);
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Er zijn in totaal 13 functie die in de main code aangeroepen kunnen worden. niet allemaal zijn uiteindelijk gebruikt.
// 1. voor
// 2. achter
// 3. links
// 4. rechts
// 5. tikje_rechts
// 6. tikje_links
// 7. rechts_faze
// 8. links_faze
// 9. draaien
// 10. geluidsensor_voor
// 11. geluidsensor_rechts
// 12. geluidsensor_links
// 13. printbyte (led display)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void achter() //wielen rollen naar achter
{
  motor1.run(TERUG);
  motor2.run(TERUG);
  motor3.run(TERUG);
  motor4.run(TERUG);

    //snelheid gaat van 0 tot 255 om de andere kant op te gaan moet je de motoren op "VOOR" zetten...
    motor1.setSpeed(200); 
    motor2.setSpeed(250);     
    motor3.setSpeed(160);
    motor4.setSpeed(160);  
    //ieder wiel draait op een andere snelheid door bv: niet goed de grond raken of een zwakkere motor.
    // in de main code wel nog laten stoppen
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void voor() //wielen rollen naar voor
{
  //snelheid gaat van 0 tot 255 om de andere kant op te gaan moet je de motoren op "TERUG" zetten...
  motor1.run(VOOR);
  motor2.run(VOOR);
  motor3.run(VOOR);
  motor4.run(VOOR);

    motor1.setSpeed(50); 
    motor2.setSpeed(120);     
    motor3.setSpeed(50);
    motor4.setSpeed(90);  
    //ieder wiel draait op een andere snelheid door bv: niet goed de grond raken of een zwakkere motor.
    // in de main code wel nog laten stoppen
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Links_faze()   // fazen is het zijwaarts bewegen van de auto in dit geval naar links.
{
  motor1.run(TERUG); //wiel links voor
  motor2.run(VOOR); //wiel links achter
  motor3.run(VOOR); //wiel rechts achter
  motor4.run(TERUG); // wiel rechts voor

    motor1.setSpeed(190); 
    motor2.setSpeed(200);     
    motor3.setSpeed(200);
    motor4.setSpeed(180);  
 
   delay(150);   //hoelang naar links fazen (0,15s)

for (int i=255; i!=0; i--) //langzaam de snelheid laten afnemen is beter dan gelijk stil zetten.
 {
    motor1.setSpeed(i);  
    motor2.setSpeed(i);
    motor3.setSpeed(i);
    motor4.setSpeed(i);
 }
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Rechts_faze() // fazen is het zijwaarts bewegen van de auto in dit geval naar rechts.
{
  motor1.run(VOOR); //wiel links voor
  motor2.run(TERUG); //wiel links achter
  motor3.run(TERUG); //wiel rechts achter
  motor4.run(VOOR); //wiel rechts voor

    motor1.setSpeed(250); 
    motor2.setSpeed(200);     
    motor3.setSpeed(200);
    motor4.setSpeed(200);  
 
   delay(100);//hoelang doorijden (0,1s)
for (int i=255; i!=0; i--) 
 {
    motor1.setSpeed(i);  
    motor2.setSpeed(i);
    motor3.setSpeed(i);
    motor4.setSpeed(i);
 }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void links() //het draaien naar links doet hij om zo veel mogelijk om zijn eigen as.
{
  motor1.run(VOOR); //wiel links voor
  motor2.run(VOOR); //wiel links achter
  motor3.run(TERUG); //wiel rechts achter
  motor4.run(TERUG); //wiel rechts voor

    motor1.setSpeed(125); 
    motor2.setSpeed(100);     
    motor3.setSpeed(125);
    motor4.setSpeed(65);  
 
   delay(400);    //hoelang moet hij draaien...?? (0,4s)
for (int i=255; i!=0; i--) 
 {
    motor1.setSpeed(i);  
    motor2.setSpeed(i);
    motor3.setSpeed(i);
    motor4.setSpeed(i);
 }
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void tikje_links()
{
  motor1.run(VOOR);
  motor2.run(VOOR);
  motor3.run(TERUG);
  motor4.run(TERUG);

    motor1.setSpeed(125); 
    motor2.setSpeed(100);     
    motor3.setSpeed(125);
    motor4.setSpeed(65);  
 
   delay(300);      //hoelang moet hij draaien...?? (0,3s)
for (int i=255; i!=0; i--) 
 {
    motor1.setSpeed(i);  
    motor2.setSpeed(i);
    motor3.setSpeed(i);
    motor4.setSpeed(i);
 }
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void rechts()
{
motor1.run(TERUG);
motor2.run(TERUG);
motor3.run(VOOR);
motor4.run(VOOR);

    motor1.setSpeed(40);
    motor2.setSpeed(125);  
    motor3.setSpeed(75); 
    motor4.setSpeed(125); 
    
 
    delay(400);     //hoelang moet hij draaien...?? (0,4s)
for (int i=255; i!=0; i--) 
 {
    motor1.setSpeed(i);  
    motor2.setSpeed(i);
    motor3.setSpeed(i);
    motor4.setSpeed(i);
 }
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void tikje_rechts()
{
motor1.run(TERUG);
motor2.run(TERUG);
motor3.run(VOOR);
motor4.run(VOOR);

    motor1.setSpeed(40);
    motor2.setSpeed(125);  
    motor3.setSpeed(75); 
    motor4.setSpeed(125); 
    
 
    delay(300);     //hoelang moet hij draaien...?? (0,3s)
for (int i=255; i!=0; i--) 
 {
    motor1.setSpeed(i);  
    motor2.setSpeed(i);
    motor3.setSpeed(i);
    motor4.setSpeed(i);
 }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Draaien()
{
motor1.run(TERUG);
motor2.run(TERUG);
motor3.run(VOOR);
motor4.run(VOOR);
for (int i=0; i<255; i++) 
 {
    motor1.setSpeed(200);
    motor2.setSpeed(200);  
    motor3.setSpeed(200); 
    motor4.setSpeed(200); 
    
 }
    delay(950); //hoelang moet hij draaien...?? delay(2xlinks);
for (int i=255; i!=0; i--) 
 {
    motor1.setSpeed(i);  
    motor2.setSpeed(i);
    motor3.setSpeed(i);
    motor4.setSpeed(i);
 }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Geluid_voor()
{
digitalWrite(trigPin, LOW);
    delay(2);
    digitalWrite(trigPin, HIGH);
    delay(10);
    digitalWrite(trigPin, LOW);
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Geluid_rechts()
{
  digitalWrite(trigPin1, LOW);
    delay(2);
    digitalWrite(trigPin1, HIGH);
    delay(10);
    digitalWrite(trigPin1, LOW);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Geluid_links()
{
  digitalWrite(trigPin2, LOW);
    delay(2);
    digitalWrite(trigPin2, HIGH);
    delay(10);
    digitalWrite(trigPin2, LOW);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void printByte(byte character [])
{
  int i = 0;
  for(i=0;i<9;i++)
  {
    lc.setRow(0, i, character[i]);
  }
}

////////////////////////////////////////////////////////////////////////////////////MAIN CODE//////////////////////////////////////////////////////////////////////////////////////////////////////////////
  // volgorde is als volgt: 
  // LED_DISPLAY voor.
  // SERVO.
  // GELUID VOOR.
  // afstand muur corrigeren als nodig.
  // rijden voor totdat de afstand minder is dan 10 cm.
  // links checken, vrij is LED_links aan en links draaien. na draaien faze rechts.
  // als niet vrij, led_rechts aan en rechts draaien. na draaien faze links.
  // altijd zijkanten meten om afstand muur te houden door fazen.

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void loop() 
{
long /*Middel:*/duration, distance, /*rechter sensor*/duration1, distance1,/*linker sensor*/ duration2, distance2; 
  // dit zorgt ervoor dat de tergegeven waardes van de sensor in een interter passen.

    printByte(L);
    servo.write(100);
    Geluid_voor();
    duration = pulseIn(echoPin, HIGH);                    //sensor voor naar voor
    distance = duration * 0.034 / 2;
    //Serial.println(distance);
    delay(200);

    servo.write(60);
    delay(200);
    Geluid_voor();
    duration = pulseIn(echoPin, HIGH);                    //sensor voor half naar rechts
    distance = duration * 0.034 / 2;
    //Serial.println(distance);

    if (distance <= 15)
    {
      printByte(V);
      tikje_links();
      printByte(L);
    }
     delay(200);
    printByte(L);
    servo.write(40);
    delay(200);
    Geluid_voor();
    duration = pulseIn(echoPin, HIGH);                  //sensor voor helemaal rechts
    distance = duration * 0.034 / 2;
    Serial.println(distance);

    if (distance <= 15)
    {
      printByte(V);
      tikje_links();
      printByte(L);
    }

    delay(200);
    printByte(L);
    servo.write(60);
    delay(200);
    Geluid_voor();
    duration = pulseIn(echoPin, HIGH);                  //sensor voor half naar rechts
    distance = duration * 0.034 / 2;
    Serial.println(distance);

    if (distance <= 15)
    {
      printByte(V);
      tikje_links();
      printByte(L);
    }

    delay(200);
    printByte(L);
    servo.write(100);
  Geluid_voor();
    duration = pulseIn(echoPin, HIGH);                  //sensor voor naar voor
    distance = duration * 0.034 / 2;
    Serial.println(distance);
    delay(200);

    printByte(L); 
    servo.write(120);
    delay(200);
    Geluid_voor();
    duration = pulseIn(echoPin, HIGH);                  //sensor voor half naar links
    distance = duration * 0.034 / 2;
    Serial.println(distance);

    if (distance <= 15)
    {
      printByte(R);
      tikje_rechts();
      printByte(L);
    }
    delay(200);
    printByte(L);
    servo.write(150);
    delay(200);
    Geluid_voor();
    duration = pulseIn(echoPin, HIGH);                   //sensor voor helemaal naar links
    distance = duration * 0.034 / 2;
    Serial.println(distance);

    if (distance <= 15)
    {
      printByte(R);
      tikje_rechts();
      printByte(L);
    }
    delay(200);
    printByte(L);
    servo.write(120);
    delay(200);
    Geluid_voor();
    duration = pulseIn(echoPin, HIGH);                    //sensor voor half naar links
    distance = duration * 0.034 / 2;
    Serial.println(distance);

    if (distance <= 15)
    {
      printByte(R);
      tikje_rechts();
      printByte(L);
    }

    delay(200);
    servo.write(100);
    printByte(L);
  Geluid_links();
    duration2 = pulseIn(echoPin2, HIGH);                 //sensor voor naar voor
    distance2 = duration2 * 0.034 / 2;
    Serial.println(distance2);
  Geluid_rechts();
    duration1 = pulseIn(echoPin1, HIGH);
    distance1 = duration1 * 0.034 / 2;
    Serial.println(distance1);
   
   if (distance1 <= 2)
    {Links_faze();}
   if (distance2 <= 2)
    {Rechts_faze();}

while (distance >= thresholdDistance)                   //naar voor rijden als er ruimte is
  {
    printByte(L);
    voor();
    Geluid_voor();
     duration = pulseIn(echoPin, HIGH);
    distance = duration * 0.034 / 2;
    Serial.println(distance);
    Geluid_links();
    duration2 = pulseIn(echoPin2, HIGH);
    distance2 = duration2 * 0.034 / 2;
    Serial.println(distance2);
    Geluid_rechts();
    duration1 = pulseIn(echoPin1, HIGH);
    distance1 = duration1 * 0.034 / 2;
    Serial.println(distance1);

    if (distance1 <= 2)                             //zijkanten in de gaten houden, te dichtbij = fazen tegengestelde richting
      {Links_faze();}
    if (distance2 <= 2)
      {Rechts_faze();}
  }
  for (int i=255; i!=0; i--) 
 {
    motor1.setSpeed(i);  
    motor2.setSpeed(i);
    motor3.setSpeed(i);
    motor4.setSpeed(i);
 }

    while (distance1 < thresholdDistance1 && distance < thresholdDistance)              //voor is te dichtbij dan gaat hij naar links    
    {
    printByte(V);
    links();
    Rechts_faze();
    links();
    printByte(L);
    Geluid_voor();
    duration = pulseIn(echoPin, HIGH);
    distance = duration * 0.034 / 2;
    Serial.println(distance);

    Geluid_rechts();
    duration1 = pulseIn(echoPin1, HIGH);
    distance1 = duration1 * 0.034 / 2;
    Serial.println(distance1);

    Geluid_links();
    duration2 = pulseIn(echoPin2, HIGH);
    distance2 = duration2 * 0.034 / 2;
    Serial.println(distance2);
    }

   while (distance1 > thresholdDistance1 && distance < thresholdDistance)       //voor en links is te dichtbij, dan gaat hij naar rechts
    {
    printByte(R);
    rechts();
    Links_faze();
    rechts();
    printByte(L);
      Geluid_voor();
      duration = pulseIn(echoPin, HIGH);
      distance = duration * 0.034 / 2;
      Serial.println(distance);

      Geluid_rechts();
     duration1 = pulseIn(echoPin1, HIGH);
     distance1 = duration1 * 0.034 / 2;
     Serial.println(distance1);

      Geluid_links();
      duration2 = pulseIn(echoPin2, HIGH);
      distance2 = duration2 * 0.034 / 2;
      Serial.println(distance2);
    }
   }
  
